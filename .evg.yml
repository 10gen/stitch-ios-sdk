functions:
  "fetch_source":
    - command: git.get_project
      params:
        directory: "stitch-ios-sdk"
  "setup_swiftlint":
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          git clone https://github.com/realm/SwiftLint
          cd SwiftLint
          git submodule update --init --recursive
          make install
  "setup_mongod":
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          set -e
          curl --silent ${mongodb_url} | tar xz
    - command: shell.exec
      params:
        shell: "bash"
        background: true
        script: |
          set -e
          cd mongodb-*
          echo "starting mongod..."
          mkdir db_files
          ./bin/mongod --dbpath ./db_files --port 26000
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          set -e
          cd mongodb-*
          echo "waiting for mongod to start up"
          ./bin/mongo --nodb --eval 'assert.soon(function(x){try{var d = new Mongo("localhost:26000"); return true}catch(e){return false}}, "timed out connecting")'
          echo "mongod is up."
  "setup_stitch":
    - command: shell.exec
      params:
        shell: "bash"
        silent: true
        script: |
          set -e
          echo export AWS_ACCESS_KEY_ID=${test_aws_key} >> creds
          echo export AWS_SECRET_ACCESS_KEY=${test_aws_secret} >> creds
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          set -e
          echo "cloning stitch"
          mkdir -p src/github.com/10gen
          git clone git@github.com:10gen/stitch src/github.com/10gen/stitch
          echo "downloading update_doc"
          curl --silent -O "https://s3.amazonaws.com/stitch-artifacts/stitch-mongo-libs/stitch_mongo_libs_osx_patch_cbcbfd8ebefcca439ff2e4d99b022aedb0d61041_59e2b7a5c9ec4432c400181c_17_10_15_01_19_33/update_doc"
          echo "downloading assisted_agg"
          curl --silent -O "https://s3.amazonaws.com/stitch-artifacts/stitch-mongo-libs/stitch_mongo_libs_osx_patch_cbcbfd8ebefcca439ff2e4d99b022aedb0d61041_59e2b7ab2a60ed5647001827_17_10_15_01_19_39/assisted_agg"
          chmod +x update_doc
          chmod +x assisted_agg
          echo "building transpiler"
          cd src/github.com/10gen/stitch/etc/transpiler
          curl -O "https://nodejs.org/dist/v8.11.2/node-v8.11.2-darwin-x64.tar.gz"
          tar zxf node-v8.11.2-darwin-x64.tar.gz
          export PATH=`pwd`/node-v8.11.2-darwin-x64/bin/:$PATH
          rm -rf $HOME/.yarn
          curl -o- -L https://yarnpkg.com/install.sh | bash
          export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
          yarn install && yarn run build -t ${transpiler_target}
    - command: shell.exec
      params:
        shell: "bash"
        background: true
        script: |
          set -e
          export PATH=`pwd`/:$PATH
          curl --silent https://dl.google.com/go/go1.10.2.darwin-amd64.tar.gz | tar xz
          export GOROOT=`pwd`/go
          export PATH=$GOROOT/bin:$PATH
          export GOPATH=`pwd`
          export STITCH_PATH=$GOPATH/src/github.com/10gen/stitch
          export PATH="$PATH:$STITCH_PATH/etc/transpiler/bin"
          echo "running stitch"
          # TODO: Probably better to get an API key added to mimic cloud
          go run $STITCH_PATH/cmd/auth/user.go addUser -domainID 000000000000000000000000 -mongoURI mongodb://localhost:26000 -salt 'DQOWene1723baqD!_@#' -id "unique_user@domain.com" -password "password"
          go run $STITCH_PATH/cmd/server/main.go --configFile $STITCH_PATH/etc/configs/test_config.json
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          counter=0
          until $(curl --output /dev/null --silent --head --fail http://localhost:9090); do
            echo "checking for API server to be up..."
            sleep 1
            let counter++
            if [ $counter -gt 100 ]; then
              exit 1
            fi
          done
  "setup_stitch_swift":
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          set -e
          cd stitch-ios-sdk
          export DEVELOPER_DIR=/Applications/Xcode9.2.app
          export PATH=`pwd`/MobileSDKs/iphoneos/lib:$PATH
          export PATH=`pwd`/MobileSDKs/include/libbson-1.0/:$PATH
          export LD_LIBRARY_PATH=`pwd`/MobileSDKs/iphoneos/lib:$LD_LIBRARY_PATH
          export DYLD_LIBRARY_PATH=`pwd`/MobileSDKs/iphoneos/lib:$DYLD_LIBRARY_PATH
          git config --global user.email "evg@mongodb.com"
          git config --global user.name "evg"
          make prepare
tasks:
  - name: lint
    commands:
      - func: "fetch_source"
      - func: "setup_swiftlint"
      - command: shell.exec
        params: 
          shell: "bash"
          script: |
            set -e
            cd stitch-ios-sdk/StitchCore
            swiftlint
  - name: run_tests
    commands:
      - func: "fetch_source"
      - func: "setup_mongod"
      - func: "setup_stitch"
      - func: "setup_stitch_swift"
      - command: shell.exec
        params:
          shell: "bash"
          script: |
            echo "running ios tests"           
            set -e

            if pgrep CoreSimulator; then pkill -9 CoreSimulator; fi

            export DEVELOPER_DIR=/Applications/Xcode9.2.app
            cd stitch-ios-sdk
            export SIM_UUID=$(xcrun simctl create stitch-iphone7 com.apple.CoreSimulator.SimDeviceType.iPhone-7 com.apple.CoreSimulator.SimRuntime.iOS-10-2)
            xcrun simctl boot $SIM_UUID
            echo "booting SIMCTL $SIM_UUID"

            echo "...testing core"
            ./scripts/run_xctest.sh StitchCoreSDK StitchCoreSDK-Package NO $SIM_UUID
            ./scripts/run_xctest.sh StitchCoreAdminClient StitchCoreAdminClient-Package YES $SIM_UUID
            ./scripts/run_xctest.sh StitchCoreTestUtils StitchCoreTestUtils-Package YES $SIM_UUID

            echo "...testing core services"
            ./scripts/run_xctest.sh StitchCoreAWSS3Service StitchCoreAWSS3Service-Package NO $SIM_UUID
            ./scripts/run_xctest.sh StitchCoreAWSSESService StitchCoreAWSSESService-Package NO $SIM_UUID
            ./scripts/run_xctest.sh StitchCoreFCMService StitchCoreFCMService-Package NO $SIM_UUID
            ./scripts/run_xctest.sh StitchCoreHTTPService StitchCoreHTTPService-Package NO $SIM_UUID
            ./scripts/run_xctest.sh StitchCoreRemoteMongoDBService StitchCoreRemoteMongoDBService-Package NO $SIM_UUID
            ./scripts/run_xctest.sh StitchCoreTwilioService StitchCoreTwilioService-Package NO $SIM_UUID

            echo "...testing ios"
            ./scripts/run_xctest.sh StitchCore StitchCore YES $SIM_UUID
            ./scripts/run_xctest.sh StitchIOSCoreTestUtils StitchIOSCoreTestUtils YES $SIM_UUID
            ./scripts/run_xctest.sh StitchCore StitchCore NO $SIM_UUID

            echo "...testing ios services"
            ./scripts/run_xctest.sh StitchAWSS3Service StitchAWSS3Service NO $SIM_UUID AWS_ACCESS_KEY_ID=${test_aws_key} AWS_SECRET_ACCESS_KEY=${test_aws_secret}
            ./scripts/run_xctest.sh StitchAWSSESService StitchAWSSESService NO $SIM_UUID AWS_ACCESS_KEY_ID=${test_aws_key} AWS_SECRET_ACCESS_KEY=${test_aws_secret}
            ./scripts/run_xctest.sh StitchFCMService StitchFCMService NO $SIM_UUID FCM_SENDER_ID=${test_fcm_sender_id} FCM_API_KEY=${test_fcm_api_key}
            ./scripts/run_xctest.sh StitchHTTPService StitchHTTPService NO $SIM_UUID
            ./scripts/run_xctest.sh StitchRemoteMongoDBService StitchRemoteMongoDBService NO $SIM_UUID
            ./scripts/run_xctest.sh StitchTwilioService StitchTwilioService NO $SIM_UUID TWILIO_SID=${test_twilio_sid} TWILIO_AUTH_TOKEN=${test_twilio_authtoken}

            xcrun simctl shutdown $SIM_UUID
            xcrun simctl erase $SIM_UUID
      - command: shell.exec
        params:
          shell: "bash"
          script: |
            cd stitch-ios-sdk
            if [ -z "${github_pr_number}" ]
            then
              if [ "${is_patch}" = "true" ]; then
                echo "not running xccoveralls"
                exit 0
              fi
            else
              /usr/local/opt/python3/bin/python3 scripts/xccoveralls.py \
                --repo-token=${coveralls_repo_token} \
                --pull-request-id=${github_pr_number} \
                --commit-sha=${revision}
            fi
buildvariants:
- name: macos-1013
  display_name: MacOS 10.13
  run_on:
    - macos-1013
  expansions:
    mongodb_url: http://fastdl.mongodb.org/osx/mongodb-osx-ssl-x86_64-3.4.4.tgz
    transpiler_target: node8-macos
  tasks:
    - name: run_tests
