functions:
  "fetch_source":
    - command: git.get_project
      params:
        directory: "stitch-ios-sdk"
  "setup_swiftlint":
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          git clone https://github.com/realm/SwiftLint
          cd SwiftLint
          git submodule update --init --recursive; make install
  "setup_xcov":
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          gem fetch xcov
          gem install --local xcov
  "setup_mongod":
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          set -e
          curl --silent ${mongodb_url} | tar xvz
    - command: shell.exec
      params:
        shell: "bash"
        background: true
        script: |
          set -e
          cd mongodb-*
          echo "starting mongod..."
          mkdir db_files
          ./bin/mongod --dbpath ./db_files --port 26000
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          set -e
          cd mongodb-*
          echo "waiting for mongod to start up"
          ./bin/mongo --nodb --eval 'assert.soon(function(x){try{var d = new Mongo("localhost:26000"); return true}catch(e){return false}}, "timed out connecting")'
          echo "mongod is up."

  "setup_stitch":
    - command: shell.exec
      params:
        shell: "bash"
        silent: true
        script: |
          set -e
          echo export AWS_ACCESS_KEY_ID=${test_aws_key} >> creds
          echo export AWS_SECRET_ACCESS_KEY=${test_aws_secret} >> creds
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          set -e
          echo "cloning stitch"
          mkdir -p src/github.com/10gen
          git clone git@github.com:10gen/stitch src/github.com/10gen/stitch

          echo "downloading libmongo"
          wget --quiet "https://s3.amazonaws.com/stitch-artifacts/stitch-mongo-libs/stitch_mongo_libs_linux_64_patch_1f02b06ec6fd48bad0b725b77bc194c84f839f53_5ab7216fc9ec44724e08f194_18_03_25_04_11_28/libmongo.so"
          chmod +x libmongo.so

          echo "building transpiler"
          cd src/github.com/10gen/stitch/etc/transpiler
          yarn install && yarn run build -t ${transpiler_target}
    - command: shell.exec
      params:
        shell: "bash"
        background: true
        script: |
          set -e
          export GOPATH=`pwd`
          export PATH="`pwd`:$PATH"
          export STITCH_PATH=$GOPATH/src/github.com/10gen/stitch
          export PATH="$PATH:$STITCH_PATH/etc/transpiler/bin"
          echo "running stitch"
          # TODO: Probably better to get an API key added to mimic cloud
          go run $STITCH_PATH/cmd/auth/user.go addUser -domainID 000000000000000000000000 -mongoURI mongodb://localhost:26000 -salt 'DQOWene1723baqD!_@#' -id "unique_user@domain.com" -password "password"
          go run $STITCH_PATH/cmd/server/main.go --configFile $STITCH_PATH/etc/configs/test_config.json
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          counter=0
          until $(curl --output /dev/null --silent --head --fail http://localhost:9090); do
            echo "checking for API server to be up..."
            sleep 1
            let counter++
            if [ $counter -gt 100 ]; then
              exit 1
            fi
          done
  "publish_codecov":
    - command: shell.exec
      params:
        shell: "bash"
        silent: true
        script: |
          set -e
          echo export CODECOV_TOKEN=${codecov_token} >> creds
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          source ./creds
          cd stitch-ios-sdk

          if [ -z "${github_pr_number}" ]
          then
            if [ "${is_patch}" = "true" ]; then
              exit 0
            fi
            bash <(curl -s https://codecov.io/bash) -C ${revision} -b ${build_id}
          else
            PR_INFO=`curl https://api.github.com/repos/${github_org}/${github_repo}/pulls/${github_pr_number}`
            BRANCH=`echo $PR_INFO | python -c "import sys, json; print json.load(sys.stdin)['head']['ref']"`
            bash <(curl -s https://codecov.io/bash) -B $BRANCH -C ${revision} -P ${github_pr_number} -b ${build_id}
          fi
tasks:
  - name: lint
    commands:
      - func: "fetch_source"
      - func: "setup_swiftlint"
      - command: shell.exec
        params: 
          shell: "bash"
          script: |
            set -e
            cd stitch-ios-sdk/StitchCore
            swiftlint
  - name: run_core_tests
    commands:
      - func: "fetch_source"
      - func: "setup_xcov"
      - func: "setup_mongod"
      - func: "setup_stitch"
      - command: shell.exec
        params: 
          shell: "bash"
          script: |
            set -e
            cd stitch-ios-sdk/StitchCore

            echo "running swift core tests"
            
            swift package generate-xcodeproj
            xcodebuild test -scheme SwiftCode-Package -enableCodeCoverage YES
            xcov --legacy_support xccoverage --source_directory Sources/ --exclude_targets ExtendedJSON.framework,JWT.framework,StitchCore_AdminClient.framework,Swifter.framework
      - func: "publish_codecov"
  - name: run_ios_tests
    commands:
      - func: "fetch_source"
      - func: "setup_xcov"
      - func: "setup_mongod"
      - func: "setup_stitch"
      - command: shell.exec
        params:
          shell: "bash"
          script: |
            set -e
            cd stitch-ios-sdk/StitchCore-iOS

            echo "running iOS tests"
            xcodebuild test -workspace ../Stitch.xcworkspace/ -scheme StitchCore-iOS -configuration Debug -enableCodeCoverage YES -destination "platform=iOS Simulator,name=iPhone 8,OS=11.2"
            xcov --legacy_support xccoverage --exclude_targets ExtendedJSON.framework,JWT.framework,StitchCore_AdminClient.framework,Swifter.framework
      - func: "publish_codecov"
post:
  - command: attach.xunit_results
    params:
      files:
        - "./stitch-ios-sdk/StitchCore/xcov_report/**/*"
        - "./stitch-ios-sdk/StitchCore-iOS/xcov_report/**/*"

buildvariants:
- name: macos-1012
  display_name: MacOS 1012
  run_on:
    - macos-1012
  expansions:
    mongodb_url: http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.4.4.tgz
    transpiler_target: node8-linux
  tasks:
    - name: run_core_tests
    - name: run_ios_tests
